workflows:
  version: 2
  test_and_package:
    jobs:
      - test
      - publish:
          requires:
            - test
          filters:
            branches:
              only: master

version: 2
jobs:
  test:
    docker:
      - image: cimg/go:1.13.15

      - image: circleci/postgres:12.4-postgis-ram
        environment:
          POSTGRES_USER: clamptest
          POSTGRES_DB: clamptest
          POSTGRES_PASSWORD: cl@mpt3st

      - image: rabbitmq:3.8.9-management

      - image: zookeeper:3.6.2
        name: zookeeper

      - image: wurstmeister/kafka:2.13-2.6.0
        environment:
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_ADVERTISED_HOST_NAME: localhost

    environment:
      TEST_RESULTS: /tmp/test-results

    steps:          
      
      - checkout

      - run: mkdir -p $TEST_RESULTS

      - run:
          name: waiting for Postgres to be ready
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: waiting for Rabbitmq to be ready
          command: dockerize -wait tcp://localhost:15672 -timeout 1m

      - run:
          name: waiting for Apache Kafka to be ready
          command: dockerize -wait tcp://localhost:9092 -timeout 1m

      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      - run: 
          name: run unit tests
          environment:
            CLAMP_DB_CONNECTION_STR: "host=localhost:5432 user=clamptest dbname=clamptest"
            CLAMP_KAFKA_CONNECTION_STR: "localhost:9092"
            CLAMP_QUEUE_CONNECTION_STR: "amqp://guest:guest@localhost:5672/"
          command: |
            if [ $CIRCLE_BRANCH == 'master' ]; then
              ./cc-test-reporter before-build
            fi
            gotestsum --junitfile ${TEST_RESULTS}/gotestsum-report.xml -- clamp-core/executors clamp-core/models clamp-core/services clamp-core/executors -coverprofile=c.out
            if [ $CIRCLE_BRANCH == 'master' ]; then
              ./cc-test-reporter after-build --coverage-input-type gocov -p clamp-core --exit-code $?
            fi
            
      
      - store_test_results:
          path: /tmp/test-results

  publish:
    docker:
      - image: cimg/go:1.13.15

    steps:
      - setup_remote_docker
      - checkout
      - run: 
          name: build and publish docker img
          command: |
            echo $GITHUB_CONTAINER_REGISTRY_TOKEN | docker login https://docker.pkg.github.com -u priyaaank --password-stdin
            docker build -t docker.pkg.github.com/clamp-orchestrator/clamp-core/clamp-core:$CIRCLE_SHA1 .
            docker push docker.pkg.github.com/clamp-orchestrator/clamp-core/clamp-core:$CIRCLE_SHA1
            docker system prune -f -a
