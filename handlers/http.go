package handlers

import (
	"github.com/gin-gonic/gin"
	swaggerFiles "github.com/swaggo/files"
	"github.com/swaggo/gin-swagger"

	_ "clamp-core/docs" // docs is generated by Swag CLI, you have to import it.
)

// @title Clamp Swagger API
// @version 1.0
// @description This is a sample server Petstore server.
// @termsOfService http://swagger.io/terms/

// @host localhost:8080
// @BasePath /
func setupRouter() *gin.Engine {
	r := gin.Default()
	r.GET("/metrics", prometheusHandler())
	r.POST("/serviceRequest/:workflowName", createServiceRequestHandler())
	r.GET("/serviceRequest/:serviceRequestId", getServiceRequestStatusHandler())
	r.POST("/workflow", createWorkflowHandler())
	r.GET("/workflow/:workflow", fetchWorkflowBasedOnWorkflowName())
	r.POST("/stepResponse", createStepResponseHandler())
	r.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))
	r.GET("/workflows", getWorkflows())
	r.GET("/serviceRequests/:workflowName", findServiceRequestByWorkflowNameHandler())
	r.Use(CORSMiddleware())
	return r
}

func CORSMiddleware() gin.HandlerFunc {
	return func(c *gin.Context) {
		c.Writer.Header().Set("Access-Control-Allow-Origin", "*")
		c.Writer.Header().Set("Access-Control-Allow-Credentials", "true")
		c.Writer.Header().Set("Access-Control-Allow-Headers", "Content-Type, Content-Length, Accept-Encoding, X-CSRF-Token, Authorization, accept, origin, Cache-Control, X-Requested-With")
		c.Writer.Header().Set("Access-Control-Allow-Methods", "POST, OPTIONS, GET, PUT")

		if c.Request.Method == "OPTIONS" {
			c.AbortWithStatus(204)
			return
		}

		c.Next()
	}
}

//LoadHTTPRoutes loads all HTTP api routes
func LoadHTTPRoutes() {
	r := setupRouter()
	err := r.Run()
	panic(err)
}
